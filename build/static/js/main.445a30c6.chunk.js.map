{"version":3,"sources":["components/todo.jsx","components/todos.jsx","components/addtodo.jsx","App.js","serviceWorker.js","index.js"],"names":["confirm","Modal","Todo","state","visible","showModal","setState","showDeleteConfirm","props","title","todo","content","icon","ExclamationCircleOutlined","okText","okType","cancelText","onOk","onDelete","message","success","onCancel","console","log","handleOk","e","value","refs","inputV","onEdit","handleCancel","formatSwitch","finish","handleSwitch","checked","onUpdate","style","hoverable","width","marginTop","marginBottom","actions","EditTwoTone","onClick","key","DeleteTwoTone","this","date","checkedChildren","unCheckedChildren","placeholder","ref","Component","TabPane","Tabs","Todos","renderTodos","className","defaultActiveKey","tab","backgroundColor","count","allTodos","length","finished","unfinished","Fragment","AddTodo","id","Date","getTime","toLocaleString","onAddTodo","type","PlusOutlined","App","todos","JSON","parse","localStorage","getItem","saveTodo","setItem","stringify","handleEdit","index","indexOf","handleAddTodo","push","handleDelete","splice","handleUpdate","map","description","image","Empty","PRESENTED_IMAGE_SIMPLE","filter","visibilityHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.445a30c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card } from 'antd';\r\nimport { EditTwoTone, DeleteTwoTone } from '@ant-design/icons';\r\nimport { Switch } from 'antd';\r\nimport { Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { message } from 'antd';\r\nconst { confirm } = Modal;\r\nclass Todo extends Component {\r\n\tstate = { visible: false };\r\n\r\n\tshowModal = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t};\r\n\t// 处理删除事件\r\n\tshowDeleteConfirm = props => {\r\n\t\tconfirm({\r\n\t\t\ttitle: `你确定要删除此任务吗？(${props.todo.content})`,\r\n\t\t\ticon: <ExclamationCircleOutlined />,\r\n\t\t\tcontent: '',\r\n\t\t\tokText: '确定',\r\n\t\t\tokType: 'danger',\r\n\t\t\tcancelText: '取消',\r\n\t\t\tonOk() {\r\n\t\t\t\tprops.onDelete(props.todo);\r\n\t\t\t\tmessage.success('已成功删除！');\r\n\t\t\t},\r\n\t\t\tonCancel() {\r\n\t\t\t\tconsole.log('用户已取消删除');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t// 处理更新事件\r\n\thandleOk = e => {\r\n\t\tconst todo = this.props.todo;\r\n\t\tconst { value } = this.refs.inputV.state;\r\n\t\ttodo.content = value;\r\n\t\tthis.setState({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\t\tthis.props.onEdit(todo);\r\n\t\tmessage.success('更新成功！');\r\n\t};\r\n\t// 取消更新弹框事件\r\n\thandleCancel = e => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\t\tconsole.log('用户已取消更新');\r\n\t};\r\n\t// 格式化switch状态\r\n\tformatSwitch = () => {\r\n\t\treturn this.props.todo.finish === false ? false : true;\r\n\t};\r\n\t// 处理switch状态\r\n\thandleSwitch = checked => {\r\n\t\tconst todo = this.props.todo;\r\n\t\ttodo.finish = checked;\r\n\t\tthis.props.onUpdate(todo);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{}}>\r\n\t\t\t\t<Card\r\n\t\t\t\t\thoverable=\"true\"\r\n\t\t\t\t\tstyle={{ width: 300, marginTop: 16, marginBottom: 10 }}\r\n\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t<EditTwoTone\r\n\t\t\t\t\t\t\tonClick={() => this.showModal()}\r\n\t\t\t\t\t\t\tkey=\"edit\"\r\n\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t<DeleteTwoTone\r\n\t\t\t\t\t\t\tonClick={() => this.showDeleteConfirm(this.props)}\r\n\t\t\t\t\t\t\tkey=\"delete\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>{this.props.todo.content}</p>\r\n\r\n\t\t\t\t\t<p style={{ marginTop: 12 }}>{this.props.todo.date}</p>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tonClick={this.handleSwitch}\r\n\t\t\t\t\t\tcheckedChildren=\"完成\"\r\n\t\t\t\t\t\tunCheckedChildren=\"未完成\"\r\n\t\t\t\t\t\tchecked={this.formatSwitch()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\ttitle=\"更新任务\"\r\n\t\t\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\t\t\tonOk={this.handleOk}\r\n\t\t\t\t\t\tonCancel={this.handleCancel}\r\n\t\t\t\t\t\tcancelText=\"取消\"\r\n\t\t\t\t\t\tokText=\"确定\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input placeholder=\"在此更新任务内容\" ref=\"inputV\" />\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport { Badge } from 'antd';\r\nconst { TabPane } = Tabs;\r\nclass Todos extends Component {\r\n\trenderTodos = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"todos\">\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\ttab={\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t查看全部&nbsp;\r\n\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#2db7f5' }}\r\n\t\t\t\t\t\t\t\t\tcount={this.props.allTodos().length}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tkey=\"1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"todos-center\">\r\n\t\t\t\t\t\t\t{this.props.allTodos()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\ttab={\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t已完成&nbsp;\r\n\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#52c41a'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tcount={this.props.finished().length}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tkey=\"2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"todos-center\">\r\n\t\t\t\t\t\t\t{this.props.finished()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\ttab={\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t未完成&nbsp;\r\n\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#f50'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tcount={this.props.unfinished().length}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tkey=\"3\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"todos-center\">\r\n\t\t\t\t\t\t\t{this.props.unfinished()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\trender() {\r\n\t\treturn <React.Fragment>{this.renderTodos()}</React.Fragment>;\r\n\t}\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nclass AddTodo extends Component {\r\n\tstate = { visible: false };\r\n\tshowModal = () => {\r\n\t\tthis.setState({\r\n\t\t\t// 控制弹窗开关\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t};\r\n\t// 当用户点击确定所要做的事\r\n\thandleOk = e => {\r\n\t\tconst { value } = this.refs.inputV.state;\r\n\r\n\t\tconst todo = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\tcontent: value,\r\n\t\t\tdate: new Date().toLocaleString(),\r\n\t\t\tfinish: false\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\t\tmessage.success('新增成功！');\r\n\t\tthis.props.onAddTodo(todo);\r\n\t};\r\n\t// 当用户点击取消所要做的事\r\n\thandleCancel = e => {\r\n\t\tconsole.log('用户已取消新增任务');\r\n\t\tthis.setState({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ marginTop: 30 }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\tonClick={this.showModal}\r\n\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t>\r\n\t\t\t\t\t新增任务\r\n\t\t\t\t</Button>\r\n\t\t\t\t{/* 弹框 */}\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle=\"新增任务\"\r\n\t\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\t\tonOk={this.handleOk}\r\n\t\t\t\t\tonCancel={this.handleCancel}\r\n\t\t\t\t\tcancelText=\"取消\"\r\n\t\t\t\t\tokText=\"确定\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input placeholder=\"在此输入需要完成的任务\" ref=\"inputV\" />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Todo from './components/todo';\nimport Todos from './components/todos';\nimport AddTodo from './components/addtodo';\nimport { Empty } from 'antd';\nimport { BackTop } from 'antd';\nimport './App.css';\nclass App extends Component {\n\tstate = {\n\t\ttodos: JSON.parse(localStorage.getItem('todos')) || []\n\t};\n\t// 封装保存todo方法\n\tsaveTodo = todos => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t};\n\t//  更新todo内容\n\thandleEdit = todo => {\n\t\tconst index = this.state.todos.indexOf(todo);\n\t\tconst todos = [...this.state.todos];\n\t\ttodos[index].content = todo.content;\n\t\tthis.setState({\n\t\t\ttodos\n\t\t});\n\t\tthis.saveTodo(todos);\n\t};\n\t// 新增一个todo\n\thandleAddTodo = todo => {\n\t\tconst todos = [...this.state.todos];\n\t\ttodos.push(todo);\n\t\tthis.setState({\n\t\t\ttodos\n\t\t});\n\t\tthis.saveTodo(todos);\n\t};\n\t// 删除一个todo\n\thandleDelete = todo => {\n\t\tconst index = this.state.todos.indexOf(todo);\n\t\tconst todos = [...this.state.todos];\n\t\ttodos.splice(index, 1);\n\t\tthis.setState({\n\t\t\ttodos\n\t\t});\n\t\tthis.saveTodo(todos);\n\t};\n\t// 改变todo的完成状态\n\thandleUpdate = todo => {\n\t\tconst index = this.state.todos.indexOf(todo);\n\t\tconst todos = [...this.state.todos];\n\t\ttodos[index].finish = todo.finish;\n\t\tthis.setState({\n\t\t\ttodos\n\t\t});\n\t\tthis.saveTodo(todos);\n\t};\n\t// 返回所有todo\n\tallTodos = () => {\n\t\tif (!this.state.todos.length) {\n\t\t\treturn (\n\t\t\t\t<Empty\n\t\t\t\t\tdescription=\"无数据，请添加\"\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn this.state.todos.map(todo => (\n\t\t\t<Todo\n\t\t\t\tonEdit={this.handleEdit}\n\t\t\t\tonUpdate={this.handleUpdate}\n\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\tkey={todo.id}\n\t\t\t\ttodo={todo}\n\t\t\t/>\n\t\t));\n\t};\n\t// 返回已完成的todo\n\tfinished = () => {\n\t\tconst todos = this.state.todos.filter(todo => todo.finish === true);\n\t\tif (!todos.length) {\n\t\t\treturn (\n\t\t\t\t<Empty\n\t\t\t\t\tdescription=\"暂无已完成的任务\"\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn todos.map(todo => (\n\t\t\t<Todo\n\t\t\t\tonEdit={this.handleEdit}\n\t\t\t\tonUpdate={this.handleUpdate}\n\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\tkey={todo.id}\n\t\t\t\ttodo={todo}\n\t\t\t/>\n\t\t));\n\t};\n\t// 返回未完成的todo\n\tunfinished = () => {\n\t\tconst todos = this.state.todos.filter(todo => todo.finish === false);\n\t\tif (!todos.length) {\n\t\t\treturn (\n\t\t\t\t<Empty\n\t\t\t\t\tdescription=\"暂无未完成的任务\"\n\t\t\t\t\timage={Empty.PRESENTED_IMAGE_SIMPLE}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn todos.map(todo => (\n\t\t\t<Todo\n\t\t\t\tonEdit={this.handleEdit}\n\t\t\t\tonUpdate={this.handleUpdate}\n\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\tkey={todo.id}\n\t\t\t\ttodo={todo}\n\t\t\t/>\n\t\t));\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<AddTodo onAddTodo={this.handleAddTodo} />\n\t\t\t\t<Todos\n\t\t\t\t\tallTodos={this.allTodos}\n\t\t\t\t\tfinished={this.finished}\n\t\t\t\t\tunfinished={this.unfinished}\n\t\t\t\t\ttodos={this.state.todos}\n\t\t\t\t/>\n\t\t\t\t{/* 回到顶部 */}\n\t\t\t\t<BackTop visibilityHeight />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}